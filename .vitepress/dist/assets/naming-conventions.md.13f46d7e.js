import{_ as t,c as e,o as a,N as o}from"./chunks/framework.0799945b.js";const u=JSON.parse('{"title":"Naming conventions","description":"","frontmatter":{},"headers":[],"relativePath":"naming-conventions.md"}'),d={name:"naming-conventions.md"},n=o('<h1 id="naming-conventions" tabindex="-1">Naming conventions <a class="header-anchor" href="#naming-conventions" aria-label="Permalink to &quot;Naming conventions&quot;">‚Äã</a></h1><p>You know what‚Äôs the most annoying thing in programming? Naming things. ü•≤ So let‚Äôs get ourselves some standards and never think about it ever again.</p><h3 id="file-names" tabindex="-1">File names <a class="header-anchor" href="#file-names" aria-label="Permalink to &quot;File names&quot;">‚Äã</a></h3><p>A great way to quickly find things in your IDE is being searching directly by file name. A simple way to improve your experience is to suffix your components with their function.</p><table><thead><tr><th>Type</th><th>Example</th></tr></thead><tbody><tr><td><strong>types</strong></td><td><code>example.type.ts</code></td></tr><tr><td><strong>services</strong></td><td><code>example.service.ts</code></td></tr><tr><td><strong>stores</strong></td><td><code>example.store.ts</code></td></tr><tr><td><strong>routes</strong></td><td><code>example.routes.ts</code></td></tr><tr><td><strong>views</strong></td><td><code>ExampleView.ts</code></td></tr></tbody></table><h3 id="file-name-casing" tabindex="-1">File name casing <a class="header-anchor" href="#file-name-casing" aria-label="Permalink to &quot;File name casing&quot;">‚Äã</a></h3><ul><li><strong>folders</strong>: kebab-case eg. <code>my-example-folder</code></li><li><strong>.ts files</strong>: camelCase eg. <code>exampleCenter.ts</code></li><li><strong>.vue files</strong>: PascalCase eg. <code>MyComponent.vue</code></li></ul><h3 id="object-name-casing" tabindex="-1">Object name casing <a class="header-anchor" href="#object-name-casing" aria-label="Permalink to &quot;Object name casing&quot;">‚Äã</a></h3><table><thead><tr><th>Type</th><th>Casing</th><th>Example</th></tr></thead><tbody><tr><td><strong>services</strong></td><td>PascalCase</td><td><code>ExampleService</code></td></tr><tr><td><strong>stores</strong></td><td>use + PascalCase</td><td><code>useExampleStore</code></td></tr><tr><td><strong>composables</strong></td><td>use + PascalCase</td><td><code>useExampleComposable</code></td></tr><tr><td><strong>types</strong></td><td>PascalCase</td><td><code>ExampleType</code></td></tr><tr><td><strong>routes</strong></td><td>PascalCase</td><td><code>ExampleRoutes</code></td></tr><tr><td><strong>variable names</strong></td><td>camelCase</td><td><code>exampleVariable</code></td></tr><tr><td><strong>function names</strong></td><td>camelCase</td><td><code>exampleFunction</code></td></tr><tr><td><strong>constants</strong></td><td>UPPERCASE_SNAKE_CASE</td><td><code>MY_CONSTANT</code></td></tr><tr><td><strong>components in template</strong></td><td>PascalCase</td><td><code>&lt;MyComponent /&gt;</code></td></tr><tr><td><strong>translation key</strong></td><td>snake_case</td><td><code>my_key</code></td></tr><tr><td><strong>route paths</strong></td><td>kebab-case</td><td><code>/example-route</code></td></tr><tr><td><strong>booleans</strong></td><td>is/has + camelCasing</td><td><code>isVisible</code></td></tr></tbody></table><h2 id="component-names" tabindex="-1">Component names <a class="header-anchor" href="#component-names" aria-label="Permalink to &quot;Component names&quot;">‚Äã</a></h2><h3 id="two-words" tabindex="-1">Two words. <a class="header-anchor" href="#two-words" aria-label="Permalink to &quot;Two words.&quot;">‚Äã</a></h3><p>Always. and I do mean always. Give. Your. Components. Two. Word. Names.</p><table><thead><tr><th>‚ùå Bad examples</th><th>‚úÖ Good examples</th></tr></thead><tbody><tr><td>Table.vue</td><td>BaseTable.vue</td></tr><tr><td>Button.vue</td><td>AppButton.vue</td></tr><tr><td>Input.vue</td><td>FormInput.vue</td></tr></tbody></table><h3 id="the-longer-the-better-üçÜ" tabindex="-1">The longer the better üçÜ <a class="header-anchor" href="#the-longer-the-better-üçÜ" aria-label="Permalink to &quot;The longer the better üçÜ&quot;">‚Äã</a></h3><p>When creating components that are tightly coupled with a view or module. Always prefix your component with the name of the module.</p><table><thead><tr><th>‚ùå Bad examples</th><th>‚úÖ Good examples</th></tr></thead><tbody><tr><td>InformationStep.vue</td><td>ClientUpdateInformationStep.vue</td></tr><tr><td>Calendar.vue</td><td>ContractCreateCalendar.vue</td></tr><tr><td>DetailInformation.vue</td><td>EmployeeDetailInformation.vue</td></tr></tbody></table>',16),r=[n];function s(i,l,c,m,h,g){return a(),e("div",null,r)}const b=t(d,[["render",s]]);export{u as __pageData,b as default};
